┌───────────────────────────────────────────────┐
    웹팩(Webpack) 설정 - Module Resolution, resolve
└───────────────────────────────────────────────┘
    1. Module Resolution

        - resolver는 절대 경로로 모듈을 알리는데 도움을 주는 라이브러리이다.
        - 모듈은 다른 모듈을 의존성으로 요구할 수 있다.
        ┌───────────────────────────────────────────────┐
            import foo from 'path/to/module'
            // or
            require('path/to/module')
        └───────────────────────────────────────────────┘
        - 의존성 모듈은 어플리케이션 코드 또는 3자 제공 라이브러리 일 수 있다.
        - resolver는 require/import 문장과 같이 번들에 포함될 모듈의 코드를 웹팩이 찾도록 도와준다.
        - 웹팩은 모듈들을 번들링 하는 동안 파일 경로를 해석하기 위해 enhanced-resolve를 사용한다.

        1) 절대 경로(Absolute paths)
        ┌───────────────────────────────────────────────┐
            import '/home/me/file';
            import 'c:\\user\\me\\file';
        └───────────────────────────────────────────────┘
            . 이미 절대경로 파일명을 갖었기 때문에 resolution이 필요없다.

        2) 상대 경로(Relative paths)
        ┌───────────────────────────────────────────────┐
            import '../src/file1';
            import './file2';
        └───────────────────────────────────────────────┘
            . 이 경우, import 또는 require가 발생한 그 리소스 파일의 디렉토리가 컨텍스트 디렉토리가 된다.
            . 상대경로는, 현재 컨텍스트 경로와 합쳐서 모듈에 대한 절대 경로를 생산한다.

        3) 모듈 경로(Module paths)
        ┌───────────────────────────────────────────────┐
            import 'module';
            import 'module/lib/file';
        └───────────────────────────────────────────────┘
            . 모듈들은 resolve.modules 내에 기술된 모든 디렉토리에서 검색된다.
            . resolve.alias 설정 옵션을 사용해서, 원래 경로에 대한 별칭을 생성해서 원래 모듈 경로를 대체할 수 있다.

            https://webpack.js.org/concepts/module-resolution/




    2. Resolve 

        - resolve 옵션들은 모듈이 해석되는 방법을 변경한다.
        - 웹팩은 타당한 기본값을 제공한다, 하지만 상세히 해석하는 방법을 변경할 수 있다.

        - resolve : object 타입
            . 모듈이 어떻게 해석될지를 구성.
              예) ES2015(ES6)에서 import 'lodash' 호출 시, 
                  resolve 옵션은 웹팩이 'lodash' 검색하는 곳을 변경할 수 있다.
        ┌───────────────────────────────────────────────┐
            module.exports = {
                resolve: {}
            }
        └───────────────────────────────────────────────┘   

    - resolve.alias : object 타입 

        - import 또는 require 특정 모듈에 대한 별칭을 더 쉽게 생성한다.
          예) 일반적으로 사용되는 src 폴더에 대한 별칭
        ┌───────────────────────────────────────────────┐
            module.exports = {
                resolve: {
                    alias:{
                        Utilities: path.resolve(__dirname, 'src/Utilities/'),
                        Templates: path.resolve(__dirname, 'src/templates/'),
                    }
                }
            }
        └───────────────────────────────────────────────┘ 

            . 이제, 임포트 시에 상대경로를 사용하는 대신
        ┌───────────────────────────────────────────────┐
            import Utility from '../../utilities/utility';
        └───────────────────────────────────────────────┘    

            . 별칭을 사용할 수 있다.
        ┌───────────────────────────────────────────────┐
            import Utility from 'Utilities/utility';
        └───────────────────────────────────────────────┘               

        - 정확한 일치를 나타내기 위해 객체의 key값에 $를 뒤에 추가할 수 있다.
        ┌───────────────────────────────────────────────┐
            module.exports = {
                resolve: {
                    alias:{
                        xyz$: path.resolve(__dirname, 'path/to/file.js')
                    }
                }
            }
        └───────────────────────────────────────────────┘         
            . 이런 결과를 얻을 수 있습니다.
        ┌───────────────────────────────────────────────┐
            // 정확히 일치, path/to/file 이 해식되어 임포트 된다.
            import Test1 from 'xyz';
            // 정확히 일치하지 않아, 정상적인 해결이 수행된다.
            import Test2 from 'xyz/file.js'
        └───────────────────────────────────────────────┘             

    - 다음 표는 다른 경우를 설명한다
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        alias                               import 'xyz'                            import 'xyz/file.js'
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        {}                                  /abc/node_modules/xyz/index.js          /abc/node_modules/xyz/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        { xyz:'/abc/path/to/file.js' }      /abc/path/to/file.js                    error
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────        
        { xyz$:'/abc/path/to/file.js' }     /abc/path/to/file.js                    /abc/node_modules/xyz/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────                
        { xyz: './dir/file.js' }            /abc/dir/file.js                        error
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────                
        { xyz$: './dir/file.js' }           /abc/dir/file.js                        /abc/node_modules/xyz/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────                
        { xyz: '/some/dir' }                /some/dir/index.js                      /some/dir/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────                
        { xyz$: '/some/dir' }               /some/dir/index.js                      /abc/node_modules/xyz/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────                
        { xyz: './dir' }                    /abc/dir/index.js                       /abc/dir/file.js    
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────       
        { xyz: 'modu' }                     /abc/node_modules/modu/index.js         /abc/node_modules/modu/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────       
        { xyz$: 'modu' }                    /abc/node_modules/modu/index.js         /abc/node_modules/xyz/file.js
        ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 
        { xyz: 'modu/some/file.js' }        /abc/node_modules/modu/some/file.js     error
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────    
        { xyz: 'modu/dir' }                 /abc/node_modules/modu/dir/index.js     /abc/node_modules/modu/dir/file.js 
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────    
        { xyz$: 'modu/dir' }                /abc/node_modules/modu/dir/index.js	    /abc/node_modules/xyz/file.js
        ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────    
        . index.js              : package.json에 정의되어 있다면 다른 파일로 해석될 수 있다.
        . /abc/node_modules     : /node_modules 로 해석될 수도 있다.


    - resolve.alias 에 false를 설정하면 웹팩에게 module을 무시하라고 알려주는 것이다.
        ┌───────────────────────────────────────────────┐
            module.exports = {
                resolve: {
                    alias:{
                        'ignore-module': false,
                        './ignored-module': false
                    }
                }
            }
        └───────────────────────────────────────────────┘     

    - resolve.aliasFields
        [string]: ['browser']        
        . browser 와 같이 기술된 필드는 이 스펙을 따러 파싱된다.
          https://github.com/defunctzombie/package-browser-field-spec   <== 나중에
        ┌───────────────────────────────────────────────┐
            module.exports = {
                resolve: {
                   aliasFields['browser'],
                }
            }
        └───────────────────────────────────────────────┘     